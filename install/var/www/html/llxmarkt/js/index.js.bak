
function RepooManager(){}

// Methods


RepooManager.prototype.Draw= function Draw(AppListString){
        /*
        Gets an string with all the App Description and converts to JSON to Draw it
        */
        
        var self=this;
        AppList=JSON.parse(AppListString);
        
        for (i in AppList){
                //alert(AppList[i]);
                
                console.log(AppList[i]);
                console.log(typeof(AppList[i]));
                console.log(JSON.parse(AppList[i]).name);
                
                var AppDiv=$(document.createElement("div")).addClass("appDiv");
                var TopAppDiv=$(document.createElement("div")).addClass("topAppDiv");
                var BottomAppDiv=$(document.createElement("div")).addClass("bottomAppDiv");
                
                
                var AppIcon=$(document.createElement("img")).addClass("appIcon");
                var AppIconContainer=$(document.createElement("div")).addClass("appIconContainer");
                var AppTextContainer=$(document.createElement("div")).addClass("appTextContainer");
                var AppButtonContainer=$(document.createElement("div")).addClass("appButtonsContainer");
                var AppTitle=$(document.createElement("div")).addClass("appTitle");
                var AppDescription=$(document.createElement("div")).addClass("AppDescription");
                
                var ExtraInfo=$(document.createElement("div")).addClass("extraInfo");
                
                var AppInfo=$(document.createElement("div")).addClass("AppInfo");
                var DevelInfo=$(document.createElement("div")).addClass("AppInfo");
                var DownloadBt=$(document.createElement("div")).addClass("btn btn-info").html("Download");
                $(DownloadBt).attr("resource", JSON.parse(AppList[i]).id);
                
                $(AppTitle).html(JSON.parse(AppList[i]).name);
                $(AppDescription).html(JSON.parse(AppList[i]).description);
                $(AppIcon).attr("src",JSON.parse(AppList[i]).icon);
                type="<strong>Type:</strong>"+JSON.parse(AppList[i]).type;
                subjects="<br/><strong>subjects:</strong>"+JSON.parse(AppList[i]).subjects;
                tags="<br/><strong>Tags:</strong>"+JSON.parse(AppList[i]).tags;
                $(AppInfo).html(type+subjects+tags);
                devel="<strong>Origin:</strong>"+JSON.parse(AppList[i]).developer.name+"("+JSON.parse(AppList[i]).developer.url+")";
                $(DevelInfo).html(devel);
                                
                // Button
                $(AppButtonContainer).append(DownloadBt);
                
                $(AppIconContainer).append(AppIcon);
                $(AppTextContainer).append(AppTitle);
                $(AppTextContainer).append(AppDescription);
                
                $(ExtraInfo).append(AppInfo);
                $(ExtraInfo).append(DevelInfo);
                $(ExtraInfo).append(AppButtonContainer);
                
                $(TopAppDiv).append(AppIconContainer);
                $(TopAppDiv).append(AppTextContainer);
                $(BottomAppDiv).append(ExtraInfo);
                
                $(AppDiv).append(TopAppDiv);
                $(AppDiv).append(BottomAppDiv);
                
                
                
                //var tooltips = $('.tooltip');

                
                $(AppDiv).on({
                        mouseover: function() { $(this).find(".topAppDiv").stop().animate({"margin-top": "-140px"}, 500); },
                        mouseout:  function() { $(this).find(".topAppDiv").stop().animate({"margin-top": "0px"}, 500); }
                    }         );
                
                
                $(DownloadBt).bind("click", function(event){
                        // send request to server for download resource
                        self.getResource($(this).attr("resource")+".manifest");
                        });
                
                $("#result").append(AppDiv);
                
        }
        //$("#result").html(AppList);
}


RepooManager.prototype.getResource = function getResource(filename){
        // Creates a new Ajax call to getResource php function on server
        // The server responses with a file to download
        
        var self=this;
        
        var params = {"action" : "getResource", "filename": filename};
        $.ajax({
                data:  params,
                url:   'models/appManager.php',
                type:  'post',
                beforeSend: function () {
                        //$("#result").html("Processant...");
                },
                /*success:  function (response) {
                        //alert(response);
                        console.log(response);
                        $("body").append("<iframe src='" + response+ "' style='display: none;' ></iframe>");

                }*/
                 success: function(response, status, xhr) {
                        // check for a filename
                        var filename = "";
                        //alert(window.location.href+response);
                        filename=window.location.href+response;
                        window.location = filename;
                        /*
                        alert("Pragma: "+xhr.getResponseHeader('Pragma'));
                        alert("Expires: "+xhr.getResponseHeader('Expires'));
                        
                        alert("Cache-Control: "+xhr.getResponseHeader('Cache-Control'));
                        alert("Last-Modified: "+xhr.getResponseHeader('Last-Modified'));
                        alert("Cache-Control: "+xhr.getResponseHeader('Cache-Control'));
                        alert("Content-Type: "+xhr.getResponseHeader('Content-Type'));
                        alert("Content-Disposition: "+xhr.getResponseHeader('Content-Disposition'));
                        alert("Content-Transfer-Encoding: "+xhr.getResponseHeader('Content-Transfer-Encoding'));
                        alert("Content-Length: "+xhr.getResponseHeader('Content-Length'));
                        alert("Connection: "+xhr.getResponseHeader('Connection'));
                                                  
                        
                        var disposition = xhr.getResponseHeader('Content-Disposition');
                        if (disposition && disposition.indexOf('attachment') !== -1) {
                            var filenameRegex = /filename[^;=\n]*=((['"]).*?\2|[^;\n]*)/;
                            var matches = filenameRegex.exec(disposition);
                            if (matches != null && matches[1]) filename = matches[1].replace(/['"]/g, '');
                        }
                        alert("Type: "+xhr.getResponseHeader('Content-Type'));
                        var type = xhr.getResponseHeader('Content-Type');
                        var blob = new Blob([response], { type: type });
                
                        if (typeof window.navigator.msSaveBlob !== 'undefined') {
                            // IE workaround for "HTML7007: One or more blob URLs were revoked by closing the blob for which they were created. These URLs will no longer resolve as the data backing the URL has been freed."
                            window.navigator.msSaveBlob(blob, filename);
                        } else {
                            var URL = window.URL || window.webkitURL;
                            var downloadUrl = URL.createObjectURL(blob);
                            alert(filename);
                            if (filename) {
                                // use HTML5 a[download] attribute to specify filename
                                var a = document.createElement("a");
                                // safari doesn't support this yet
                                if (typeof a.download === 'undefined') {
                                    window.location = downloadUrl;
                                } else {
                                    a.href = downloadUrl;
                                    a.download = filename;
                                    document.body.appendChild(a);
                                    a.click();
                                }
                            } else {
                                window.location = downloadUrl;
                            }
                            
                
                            setTimeout(function () { URL.revokeObjectURL(downloadUrl); }, 100); // cleanup
                            
                        
                        }*/
                    },
                    
                     error: function( jqXhr, textStatus, errorThrown ){
                                console.log( errorThrown );
                        }
                                
                
                
                
                
        });
}


RepooManager.prototype.getAndPaintAllApps = function getAndPaintAllApps(){
        
        // Creates a new Ajax call to getAllApps php function on server
        // The JSON list is painted in GUI
        
        var self=this;
        
        var params = {"action" : "getAllApps"};
        $.ajax({
                data:  params,
                url:   'models/appManager.php',
                type:  'post',
                beforeSend: function () {
                        $("#result").html("Processant...");
                },
                success:  function (response) {
                        $("#result").empty();
                        self.Draw(response);
                }
        });
}


$(document).ready(function() {    
    rpm=new RepooManager();
    rpm.getAndPaintAllApps();
    
});
    